services:
  revify-psql:
    image: postgres:17
    container_name: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: revify
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
  revify-mongo:
    image: mongo:8.0.4
    container_name: mongo
    environment:
      - MONGO_INITDB_DATABASE=files
      - MONGO_INITDB_ROOT_PASSWORD=bongo
      - MONGO_INITDB_ROOT_USERNAME=mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
  revify-redis:
    image: redis:7.4.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFINITIONS_FILE: /etc/rabbitmq/definitions.json
    entrypoint: [ "bin/bash", "/etc/rabbitmq/entrypoint.sh", "/etc/rabbitmq/post-init.sh" ]
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./definitions.json:/etc/rabbitmq/definitions.json
      - ./entrypoint.sh:/etc/rabbitmq/entrypoint.sh
      - ./post-init.sh:/etc/rabbitmq/post-init.sh
  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    env_file:
      - kafka.env
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      KC_HOST: localhost
      PROXY_ADDRESS_FORWARDING: true
      KC_PROXY: edge

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: PasswordInitial***
    command: start-dev
    depends_on:
      keycloak-db:
        condition: service_healthy
    ports:
      - "8085:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  mongo-data:
  redis-data:
  rabbitmq-data:
  postgres_data: